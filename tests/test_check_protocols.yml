- case: correct
  main: |
    from pyeo import elegant
    from typing import Protocol, final

    class House(Protocol):
        def area(self) -> int: ...

    @elegant
    @final
    class PgHouse(House):

        def area(self) -> int:
            return 10

- case: classes_without_protocol
  main: |
    from pyeo import elegant
    from typing import Protocol, final

    @elegant
    class PgHouse(object):

        def area(self) -> int:
            return 10

    @final
    @elegant
    class HttpHouse:

        def area(self) -> int:
            return 5
  
  out: |
    main:5: error: Class 'PgHouse' does not implement a Protocol.  [misc]
    main:12: error: Class 'HttpHouse' does not implement a Protocol.  [misc]
