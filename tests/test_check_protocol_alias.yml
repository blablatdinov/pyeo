- case: protocol_alias
  main: |
    from pyeo import elegant
    from typing import Protocol, final
    from typing_extensions import TypeAlias

    @elegant
    class House(Protocol):

        def area(self) -> int: ...

    BigHouse: TypeAlias = House

    @final
    @elegant
    class HttpHouse(BigHouse):

        def area(self) -> int:
            return 5

- case: not_protocol_alias
  main: |
    from typing import final
    from pyeo import elegant
    from typing_extensions import TypeAlias

    number: TypeAlias = int

    @final
    @elegant
    class Num(number):

        def __int__(self):
            return self
